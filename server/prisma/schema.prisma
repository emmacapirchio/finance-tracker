generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model assumptions {
  user_id               String   @id @db.Uuid
  current_savings_cents Int
  as_of_date            DateTime @db.Date
  savings_apr           Decimal? @default(0.00) @db.Decimal(5, 2)
  inflation_pct         Decimal? @default(0.00) @db.Decimal(5, 2)
  goal_dec_2027_cents   Int?
  users                 users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model bills {
  id             String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String          @db.Uuid
  name           String
  amount_cents   Int
  cadence        cadence
  type           bill_type       @default(bill)
  due_day        Int?            @db.SmallInt
  start_date     DateTime?       @db.Date
  end_date       DateTime?       @db.Date
  payment_method payment_method?
  notes          String?
  users          users           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, name])
  @@index([user_id, type])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model categories {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String         @unique
  kind         String
  income       income[]
  transactions transactions[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model income {
  id           String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String      @db.Uuid
  date         DateTime    @db.Date
  amount_cents Int
  source       String
  category_id  String?     @db.Uuid
  notes        String?
  created_at   DateTime?   @default(now()) @db.Timestamptz(6)
  categories   categories? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users        users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id, date], map: "income_user_date_idx")
}

model merchants {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String         @unique
  transactions transactions[]
}

model planned_items {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String   @db.Uuid
  date         DateTime @db.Date
  amount_cents Int
  label        String
  notes        String?
  users        users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model transactions {
  id            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String         @db.Uuid
  date          DateTime       @db.Date
  amount_cents  Int
  merchant_id   String?        @db.Uuid
  merchant_name String?
  category_id   String?        @db.Uuid
  method        payment_method
  notes         String?
  created_at    DateTime?      @default(now()) @db.Timestamptz(6)
  categories    categories?    @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  merchants     merchants?     @relation(fields: [merchant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users         users          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id, category_id], map: "txn_user_cat_idx")
  @@index([user_id, date], map: "txn_user_date_idx")
}

model users {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String?         @unique
  username      String?         @unique
  password_hash String?
  created_at    DateTime?       @default(now()) @db.Timestamptz(6)
  assumptions   assumptions?
  bills         bills[]
  income        income[]
  planned_items planned_items[]
  transactions  transactions[]
}

enum cadence {
  weekly
  biweekly
  monthly
  quarterly
  annual
  once
}

enum payment_method {
  credit
  debit
  cash
  ach
}

enum bill_type {
  bill
  subscription
}
